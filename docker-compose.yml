services:

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html
      - ./data/nginx/conf/fastcgi.conf:/etc/nginx/conf.d/extra-fastcgi.conf
      - ./data/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx/log/access.log:/var/log/nginx/access.log
      - ./data/nginx/log/error.log:/var/log/nginx/error.log
    links:
      - app
    networks:
      - app-network

  app:
    container_name: app
    image: php8:0.0.1
    restart: always
    depends_on:
      - db
    links:
      - db
      - redis
      - solr
    ports:
      - 8082:8082
    environment:
      MYSQL_DB_HOST: db
      MYSQL_DB_USER: user
      MYSQL_DB_PASSWORD: password
      MYSQL_DB_NAME: localdev
      XDEBUG_MODE: develop,debug
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./src:/var/www/html
      - ./data/php/opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
      - ./data/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./data/php/etc/locale.gen:/etc/locale.gen
    networks:
      - app-network

  db:
    container_name: db
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: localdev
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - ./data/mysql_57:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    restart: always
    links:
      - db
    depends_on:
      - db
    ports:
      - 8888:80
    networks:
      - app-network

  solr:
    container_name: solr
    image: solr:latest
    ports:
      - 8983:8983
    command: solr-precreate collection
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./data/redis/config/sysctl.conf:/etc/sysctl.conf
    networks:
      - app-network

  redis-commander:
    container_name: redis-gui
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - redis
    links:
      - redis
    networks:
      - app-network

volumes:
  db:
    driver: local

networks:
  app-network:
    driver: bridge
